# Source: bison local.at

# ----------------------------------------
# AT_COMPILE(OUTPUT, [SOURCES = OUTPUT.c])
# ----------------------------------------
# Compile SOURCES into OUTPUT.  If OUTPUT does not contain '.',
# assume that we are linking too; this is a hack.
m4_define([AT_COMPILE],
[AT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $CPPFLAGS m4_bmatch([$1], [[.]], [], [$LDFLAGS ])-o $1 m4_default([$2], [$1.c])[]m4_bmatch([$1], [[.]], [], [ $LIBS])],
          0, [ignore], [ignore])])

# ------------------------
# AT_TESTFUN(NAME, SOURCE)
# ------------------------

# Create a test named NAME by compiling and running C file with
# contents SOURCE.  The stdout and stderr output of the C program is
# ignored by Autotest.

m4_define([AT_TESTFUN],
[AT_SETUP([$1])
AT_DATA([$1.c], [[#line] __line__ "__file__"
$2])
AT_COMPILE([$1])
AT_CHECK([$PRE_AT_CHECK ./$1], 0, [ignore], [ignore])
AT_CLEANUP])

m4_define([AT_TESTFUN_COND],
[AT_SETUP([$1])
AT_SKIP_IF([$3])
AT_DATA([$1.c], [[#line] __line__ "__file__"
$2])
AT_COMPILE([$1])
AT_CHECK([$PRE_AT_CHECK ./$1], 0, [ignore], [ignore])
AT_CLEANUP])

# ------------------------
# AT_PYTESTFUN(NAME, SOURCE)
# ------------------------

# Create a test named NAME by running Python file with contents SOURCE.  The
# stdout and stderr output of the Python program is ignored by Autotest.

m4_define([AT_PYTESTFUN],
[AT_SETUP([$1])
AT_DATA([$1], [$2])
AT_SKIP_IF([test -z $BUILD_PYTHON3])
AT_CHECK([PYTHONPATH=../../../src python3 ./$1], 0, [ignore], [ignore]),
AT_CLEANUP])

AT_INIT
